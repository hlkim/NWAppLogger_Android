apply plugin: 'com.android.library'
apply plugin: 'android-maven'
group = 'com.github.hlkim'

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        minSdkVersion 20
        targetSdkVersion 28
        versionCode 303
        versionName "3.0.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['res']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    repositories {
        google()
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.android.gms:play-services:11.4.2'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.okio:okio:1.13.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'org.apache.httpcomponents:httpcore:4.4.4'
    implementation 'com.android.installreferrer:installreferrer:1.0'
    implementation 'com.github.hlkim:NWAppLogger_Android:3.0.3'
}

//task deleteOldJar(type:Delete) {
//    delete 'release/nwapplogger3.0.2.jar'
//}
//
//task exportJar(type:Copy) {
//    from('build/intermediates/packaged-classes/release/')
//    into('release/')
//    include('classes.jar')
//    rename('classes.jar', 'nwapplogger3.0.2.jar')
//}
//
//exportJar.dependsOn(deleteOldJar, build)
